/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FFWClubFactory,
  FFWClubFactoryInterface,
} from "../FFWClubFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_proxyRegistryAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_nftAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "baseURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
    ],
    name: "canMint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "metadataIsFrozen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_toAddress",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "nftAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "numOptions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistryAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supportsFactoryInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_optionId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101006040526047608081815290620012dd60a03980516200002a9160039160209091019062000208565b506004805460ff19169055606460055560006006553480156200004c57600080fd5b5060405162001324380380620013248339810160408190526200006f91620002cb565b6200007a336200014f565b600180546001600160a01b038085166001600160a01b03199283161790925560028054928416929091168217905560408051630cb2dac360e21b8152905182916332cb6b0c916004808301926020929190829003018186803b158015620000e057600080fd5b505afa158015620000f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200011b919062000302565b6001600160401b0316600555620001466000620001406000546001600160a01b031690565b6200019f565b50505062000397565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60005b600554811015620002035780826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a480620001fa816200036f565b915050620001a2565b505050565b828054620002169062000332565b90600052602060002090601f0160209004810192826200023a576000855562000285565b82601f106200025557805160ff191683800117855562000285565b8280016001018555821562000285579182015b828111156200028557825182559160200191906001019062000268565b506200029392915062000297565b5090565b5b8082111562000293576000815560010162000298565b80516001600160a01b0381168114620002c657600080fd5b919050565b60008060408385031215620002de578182fd5b620002e983620002ae565b9150620002f960208401620002ae565b90509250929050565b60006020828403121562000314578081fd5b81516001600160401b03811681146200032b578182fd5b9392505050565b600181811c908216806200034757607f821691505b602082108114156200036957634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156200039057634e487b7160e01b81526011600452602481fd5b5060010190565b610f3680620003a76000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063c87b56dd11610071578063c87b56dd1461025e578063cd7c032614610271578063cf880fea14610284578063e985e9c514610291578063f2fde38b146102a457600080fd5b80638da5cb5b1461021057806394bf804d1461022157806395d89b4114610234578063c311c5231461025757600080fd5b80635bf8633a116100e95780635bf8633a1461019f5780635dd871a3146101ca5780636352211e146101ed5780636c0360eb14610200578063715018a61461020857600080fd5b806306fdde031461011b57806323b872dd146101665780634b97aed91461017b57806355f804b31461018c575b600080fd5b60408051808201909152601781527f467572727920466f7820576f6f647369646520436c756200000000000000000060208201525b60405161015d9190610d5a565b60405180910390f35b610179610174366004610b12565b6102b7565b005b60055460405190815260200161015d565b61017961019a366004610b6e565b6102c6565b6002546101b2906001600160a01b031681565b6040516001600160a01b03909116815260200161015d565b6101dd6101d8366004610c18565b610363565b604051901515815260200161015d565b6101b26101fb366004610c18565b610417565b61015061042b565b6101796104b9565b6000546001600160a01b03166101b2565b61017961022f366004610c48565b6104ef565b60408051808201909152600781526623232ba1b63ab160c91b6020820152610150565b60016101dd565b61015061026c366004610c18565b6105a6565b6001546101b2906001600160a01b031681565b6004546101dd9060ff1681565b6101dd61029f366004610ada565b6105da565b6101796102b2366004610ab7565b610702565b6102c181836104ef565b505050565b6000546001600160a01b031633146102f95760405162461bcd60e51b81526004016102f090610d97565b60405180910390fd5b60045460ff161561034c5760405162461bcd60e51b815260206004820152601e60248201527f4d65746164617461206973207065726d616e656e746c792066726f7a656e000060448201526064016102f0565b805161035f906003906020840190610a1e565b5050565b6000600554821061037657506000919050565b600254604080516318160ddd60e01b815290516001600160a01b039092169160009183916318160ddd91600480820192602092909190829003018186803b1580156103c057600080fd5b505afa1580156103d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103f89190610c30565b60055490915060019061040c908290610df8565b909110949350505050565b600080546001600160a01b03165b92915050565b6003805461043890610e3f565b80601f016020809104026020016040519081016040528092919081815260200182805461046490610e3f565b80156104b15780601f10610486576101008083540402835291602001916104b1565b820191906000526020600020905b81548152906001019060200180831161049457829003601f168201915b505050505081565b6000546001600160a01b031633146104e35760405162461bcd60e51b81526004016102f090610d97565b6104ed600061074b565b565b6105266040518060400160405280600f81526020016e6d696e742073656e6465723a20257360881b8152506105213390565b61079b565b6002546001600160a01b031680636a1513d7336040516001600160e01b031960e084901b1681526001600160a01b039182166004820152908516602482015260016044820152606401600060405180830381600087803b15801561058957600080fd5b505af115801561059d573d6000803e3d6000fd5b50505050505050565b606060036105b3836107e0565b6040516020016105c4929190610cb4565b6040516020818303038152906040529050919050565b6000826001600160a01b03166105f86000546001600160a01b031690565b6001600160a01b031614801561061f5750816001600160a01b0316836001600160a01b0316145b1561062c57506001610425565b6001546001600160a01b0390811690841661064f6000546001600160a01b031690565b6001600160a01b03161480156106e9575060405163c455279160e01b81526001600160a01b038581166004830152808516919083169063c45527919060240160206040518083038186803b1580156106a657600080fd5b505afa1580156106ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106de9190610b52565b6001600160a01b0316145b156106f8576001915050610425565b5060009392505050565b6000546001600160a01b0316331461072c5760405162461bcd60e51b81526004016102f090610d97565b6000546001600160a01b031661074182610902565b61035f818361099d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61035f82826040516024016107b1929190610d6d565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526109fd565b6060816108045750506040805180820190915260018152600360fc1b602082015290565b8160005b811561082e578061081881610e7a565b91506108279050600a83610de4565b9150610808565b60008167ffffffffffffffff81111561085757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610881576020820181803683370190505b5090505b84156108fa57610896600183610df8565b91506108a3600a86610e95565b6108ae906030610dcc565b60f81b8183815181106108d157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506108f3600a86610de4565b9450610885565b949350505050565b6000546001600160a01b0316331461092c5760405162461bcd60e51b81526004016102f090610d97565b6001600160a01b0381166109915760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102f0565b61099a8161074b565b50565b60005b6005548110156102c15780826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4806109f581610e7a565b9150506109a0565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b828054610a2a90610e3f565b90600052602060002090601f016020900481019282610a4c5760008555610a92565b82601f10610a6557805160ff1916838001178555610a92565b82800160010185558215610a92579182015b82811115610a92578251825591602001919060010190610a77565b50610a9e929150610aa2565b5090565b5b80821115610a9e5760008155600101610aa3565b600060208284031215610ac8578081fd5b8135610ad381610eeb565b9392505050565b60008060408385031215610aec578081fd5b8235610af781610eeb565b91506020830135610b0781610eeb565b809150509250929050565b600080600060608486031215610b26578081fd5b8335610b3181610eeb565b92506020840135610b4181610eeb565b929592945050506040919091013590565b600060208284031215610b63578081fd5b8151610ad381610eeb565b600060208284031215610b7f578081fd5b813567ffffffffffffffff80821115610b96578283fd5b818401915084601f830112610ba9578283fd5b813581811115610bbb57610bbb610ed5565b604051601f8201601f19908116603f01168101908382118183101715610be357610be3610ed5565b81604052828152876020848701011115610bfb578586fd5b826020860160208301379182016020019490945295945050505050565b600060208284031215610c29578081fd5b5035919050565b600060208284031215610c41578081fd5b5051919050565b60008060408385031215610c5a578182fd5b823591506020830135610b0781610eeb565b60008151808452610c84816020860160208601610e0f565b601f01601f19169290920160200192915050565b60008151610caa818560208601610e0f565b9290920192915050565b600080845482600182811c915080831680610cd057607f831692505b6020808410821415610cf057634e487b7160e01b87526022600452602487fd5b818015610d045760018114610d1557610d41565b60ff19861689528489019650610d41565b60008b815260209020885b86811015610d395781548b820152908501908301610d20565b505084890196505b505050505050610d518185610c98565b95945050505050565b602081526000610ad36020830184610c6c565b604081526000610d806040830185610c6c565b905060018060a01b03831660208301529392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610ddf57610ddf610ea9565b500190565b600082610df357610df3610ebf565b500490565b600082821015610e0a57610e0a610ea9565b500390565b60005b83811015610e2a578181015183820152602001610e12565b83811115610e39576000848401525b50505050565b600181811c90821680610e5357607f821691505b60208210811415610e7457634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415610e8e57610e8e610ea9565b5060010190565b600082610ea457610ea4610ebf565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461099a57600080fdfea2646970667358221220ff6f392ef024857786daccd8a3bcd2b3b2dbf8b7793a6e4da4aa484c359d6a9b64736f6c63430008040033697066733a2f2f62616679626569626562327435646d71326e67677975636c79656835797637747263343671326d75357078626c78726779326466646d6e793772712f6f75742f";

export class FFWClubFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _proxyRegistryAddress: string,
    _nftAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FFWClubFactory> {
    return super.deploy(
      _proxyRegistryAddress,
      _nftAddress,
      overrides || {}
    ) as Promise<FFWClubFactory>;
  }
  getDeployTransaction(
    _proxyRegistryAddress: string,
    _nftAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _proxyRegistryAddress,
      _nftAddress,
      overrides || {}
    );
  }
  attach(address: string): FFWClubFactory {
    return super.attach(address) as FFWClubFactory;
  }
  connect(signer: Signer): FFWClubFactory__factory {
    return super.connect(signer) as FFWClubFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FFWClubFactoryInterface {
    return new utils.Interface(_abi) as FFWClubFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FFWClubFactory {
    return new Contract(address, _abi, signerOrProvider) as FFWClubFactory;
  }
}
